let () = System.use "matrix.iml";;


module FC = struct
    let activation f(*activation function*) w(*eights*) i(*nput*) =
        let dot_product m1 m2 = if (List.length m1) <> (List.length m2) 
            then Error  ("fully_connected: matrix size mismatch") 
            else Res.map Vec.sum (Vec.map2 ( *. ) m1 m2) in
        let i' = 1.::i in (* add 1. for bias *)
        let z = dot_product w i' in
        Res.map f z

    let rec fc f (weights:real Matrix.t) (input:real Vec.t) = match weights with
        | [] -> Ok []
        | w::ws -> Res.lift2 List.cons (activation f w input) (fc f ws input)
end