(* let () = System.use "matrix.iml" *)

module FC = struct
  let relu x = if x <=. 0. then 0. else x 

  let rec fc_rec f weights input j res =
    let open Matrix in 
    if j <= 0 then (
      let w = nth_row weights j in
      let activation = f @@ dot_product input w in
      Map.add (0,0) activation res 
    ) else (
      let w = nth_row weights j in
      let activation = f @@ dot_product input w in
      let res' = Map.add (0,j) activation res in
      fc_rec f weights input (j - 1) res'
    )

  let fc (f: 'a -> 'b) (weights: 'a Matrix.t) (input: 'a Matrix.t) : 'b Matrix.t = 
    let vals = fc_rec f weights input input.cols (Map.const 0.) in  
    {
        rows = 1;
        cols = weights.cols;
        vals = vals;
    }
end
