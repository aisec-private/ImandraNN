(* 
Property phi_1:
– Description: If the intruder is distant and is significantly slower than the ownship, the score of a COC advisory will always be below a certain fixed threshold.
– Tested on: all 45 networks.
– Input constraints: ρ ≥ 55947.691, vown ≥ 1145, vint ≤ 60.
– Desired output property: the score for COC is at most 1500. 
*)

let is_valid (dist, angle, angle_int, vown, vint) =
  -3 <= angle && angle <= 3 &&    (* angles are in [-pi, pi] *)
  -3 <= angle_int && angle_int <= 3 &&
  dist >= 0 && vown >= 0 (* speed and distances are positive *)

let condition1 (dist, angle, angle_int, vown, vint) =
  (dist <= 55948) && (vown >= 1145) && (vint <= 60)

let run (dist, angle, angle_int, vown, vint) =
  let open Matrix in
  let m = function
    | Rows -> 1
    | Cols -> 5
    | Value (0,0) -> dist
    | Value (0,1) -> angle
    | Value (0,2) -> angle_int
    | Value (0,3) -> vown
    | Value (0,4) -> vint
    | _ -> 0
  in
  let output = layer0 m |> layer1 |> layer2 |> layer3 |> layer4 |> layer5 |> layer6 in
  output

let property1 x =
  let output = run x in
  let coc = Matrix.nth output 0 0 in
  coc <= 1500

theorem acas_xu_phi_1 x =
  is_valid x && condition1 x ==> property1 x
[@@auto]